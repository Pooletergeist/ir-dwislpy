Terminals unused in grammar

    NOT


State 49 conflicts: 10 shift/reduce
State 85 conflicts: 3 shift/reduce
State 86 conflicts: 3 shift/reduce
State 87 conflicts: 3 shift/reduce


Grammar

    0 $accept: main EOFL

    1 main: prgm

    2 nest: INDT blck DEDT
    3     | INDT blck EOFL

    4 prgm: defs blck
    5     | blck
    6     | defs

    7 defs: defs defn
    8     | defn

    9 defn: "def" NAME "(" nmes ")" "->" type ":" EOLN nest
   10     | "def" NAME "(" nmes ")" ":" EOLN nest

   11 blck: stms

   12 stms: stms stmt
   13     | stmt

   14 stmt: NAME ":" type "=" expn EOLN
   15     | NAME "=" expn EOLN
   16     | "if" expn ":" EOLN nest "else" ":" EOLN nest
   17     | "if" expn ":" EOLN nest
   18     | "repeat" ":" EOLN nest "until" expn EOLN
   19     | "while" expn ":" EOLN nest
   20     | NAME "+=" expn EOLN
   21     | NAME "-=" expn EOLN
   22     | "pass" EOLN
   23     | "print" "(" xpns ")" EOLN
   24     | "return" expn EOLN
   25     | "return" EOLN
   26     | NAME "(" xpns ")" EOLN

   27 expn: NAME "(" xpns ")"
   28     | expn "and" expn
   29     | expn "or" expn
   30     | expn "<" expn
   31     | expn "<=" expn
   32     | expn "==" expn
   33     | "not" expn
   34     | expn "+" expn
   35     | expn "-" expn
   36     | expn "*" expn
   37     | expn "//" expn
   38     | expn "%" expn
   39     | NMBR
   40     | STRG
   41     | "True"
   42     | "False"
   43     | "None"
   44     | "input" "(" expn ")"
   45     | "int" "(" expn ")"
   46     | "str" "(" expn ")"
   47     | NAME
   48     | "(" expn ")"

   49 nmes: nmes "," NAME ":" type
   50     | NAME ":" type
   51     | %empty

   52 type: "int"
   53     | "str"
   54     | "bool"
   55     | "None"

   56 xpns: xpns "," expn
   57     | expn
   58     | %empty


Terminals, with rules where they appear

    EOFL (0) 0 3
    error (256)
    EOLN (258) 9 10 14 15 16 17 18 19 20 21 22 23 24 25 26
    INDT (259) 2 3
    DEDT (260) 2
    "pass" (261) 22
    "print" (262) 23
    "input" (263) 44
    "int" (264) 45 52
    "str" (265) 46 53
    "bool" (266) 54
    "->" (267) 9
    "=" (268) 14 15
    "+=" (269) 20
    "-=" (270) 21
    "and" (271) 28
    "or" (272) 29
    "<" (273) 30
    "<=" (274) 31
    "==" (275) 32
    "not" (276) 33
    "if" (277) 16 17
    "else" (278) 16
    "repeat" (279) 18
    "until" (280) 18
    "while" (281) 19
    "return" (282) 24 25
    "def" (283) 9 10
    "," (284) 49 56
    ":" (285) 9 10 14 16 17 18 19 49 50
    "+" (286) 34
    "-" (287) 35
    "*" (288) 36
    "//" (289) 37
    "%" (290) 38
    "(" (291) 9 10 23 26 27 44 45 46 48
    ")" (292) 9 10 23 26 27 44 45 46 48
    "None" (293) 43 55
    "True" (294) 41
    "False" (295) 42
    NMBR <int> (296) 39
    NAME <std::string> (297) 9 10 14 15 20 21 26 27 47 49 50
    STRG <std::string> (298) 40
    NOT (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    main (46)
        on left: 1
        on right: 0
    nest <Nest_ptr> (47)
        on left: 2 3
        on right: 9 10 16 17 18 19
    prgm <Prgm_ptr> (48)
        on left: 4 5 6
        on right: 1
    defs <Defs> (49)
        on left: 7 8
        on right: 4 6 7
    defn <Defn_ptr> (50)
        on left: 9 10
        on right: 7 8
    blck <Blck_ptr> (51)
        on left: 11
        on right: 2 3 4 5
    stms <Stmt_vec> (52)
        on left: 12 13
        on right: 11 12
    stmt <Stmt_ptr> (53)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 12 13
    expn <Expn_ptr> (54)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
        on right: 14 15 16 17 18 19 20 21 24 28 29 30 31 32 33 34 35 36 37 38 44 45 46 48 56 57
    nmes <SymT> (55)
        on left: 49 50 51
        on right: 9 10 49
    type <Type> (56)
        on left: 52 53 54 55
        on right: 9 14 49 50
    xpns <Expn_vec> (57)
        on left: 56 57 58
        on right: 23 26 27 56


State 0

    0 $accept: . main EOFL

    "pass"    shift, and go to state 1
    "print"   shift, and go to state 2
    "if"      shift, and go to state 3
    "repeat"  shift, and go to state 4
    "while"   shift, and go to state 5
    "return"  shift, and go to state 6
    "def"     shift, and go to state 7
    NAME      shift, and go to state 8

    main  go to state 9
    prgm  go to state 10
    defs  go to state 11
    defn  go to state 12
    blck  go to state 13
    stms  go to state 14
    stmt  go to state 15


State 1

   22 stmt: "pass" . EOLN

    EOLN  shift, and go to state 16


State 2

   23 stmt: "print" . "(" xpns ")" EOLN

    "("  shift, and go to state 17


State 3

   16 stmt: "if" . expn ":" EOLN nest "else" ":" EOLN nest
   17     | "if" . expn ":" EOLN nest

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 29


State 4

   18 stmt: "repeat" . ":" EOLN nest "until" expn EOLN

    ":"  shift, and go to state 30


State 5

   19 stmt: "while" . expn ":" EOLN nest

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 31


State 6

   24 stmt: "return" . expn EOLN
   25     | "return" . EOLN

    EOLN     shift, and go to state 32
    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 33


State 7

    9 defn: "def" . NAME "(" nmes ")" "->" type ":" EOLN nest
   10     | "def" . NAME "(" nmes ")" ":" EOLN nest

    NAME  shift, and go to state 34


State 8

   14 stmt: NAME . ":" type "=" expn EOLN
   15     | NAME . "=" expn EOLN
   20     | NAME . "+=" expn EOLN
   21     | NAME . "-=" expn EOLN
   26     | NAME . "(" xpns ")" EOLN

    "="   shift, and go to state 35
    "+="  shift, and go to state 36
    "-="  shift, and go to state 37
    ":"   shift, and go to state 38
    "("   shift, and go to state 39


State 9

    0 $accept: main . EOFL

    EOFL  shift, and go to state 40


State 10

    1 main: prgm .

    $default  reduce using rule 1 (main)


State 11

    4 prgm: defs . blck
    6     | defs .
    7 defs: defs . defn

    "pass"    shift, and go to state 1
    "print"   shift, and go to state 2
    "if"      shift, and go to state 3
    "repeat"  shift, and go to state 4
    "while"   shift, and go to state 5
    "return"  shift, and go to state 6
    "def"     shift, and go to state 7
    NAME      shift, and go to state 8

    $default  reduce using rule 6 (prgm)

    defn  go to state 41
    blck  go to state 42
    stms  go to state 14
    stmt  go to state 15


State 12

    8 defs: defn .

    $default  reduce using rule 8 (defs)


State 13

    5 prgm: blck .

    $default  reduce using rule 5 (prgm)


State 14

   11 blck: stms .
   12 stms: stms . stmt

    "pass"    shift, and go to state 1
    "print"   shift, and go to state 2
    "if"      shift, and go to state 3
    "repeat"  shift, and go to state 4
    "while"   shift, and go to state 5
    "return"  shift, and go to state 6
    NAME      shift, and go to state 8

    $default  reduce using rule 11 (blck)

    stmt  go to state 43


State 15

   13 stms: stmt .

    $default  reduce using rule 13 (stms)


State 16

   22 stmt: "pass" EOLN .

    $default  reduce using rule 22 (stmt)


State 17

   23 stmt: "print" "(" . xpns ")" EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    $default  reduce using rule 58 (xpns)

    expn  go to state 44
    xpns  go to state 45


State 18

   44 expn: "input" . "(" expn ")"

    "("  shift, and go to state 46


State 19

   45 expn: "int" . "(" expn ")"

    "("  shift, and go to state 47


State 20

   46 expn: "str" . "(" expn ")"

    "("  shift, and go to state 48


State 21

   33 expn: "not" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 49


State 22

   48 expn: "(" . expn ")"

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 50


State 23

   43 expn: "None" .

    $default  reduce using rule 43 (expn)


State 24

   41 expn: "True" .

    $default  reduce using rule 41 (expn)


State 25

   42 expn: "False" .

    $default  reduce using rule 42 (expn)


State 26

   39 expn: NMBR .

    $default  reduce using rule 39 (expn)


State 27

   27 expn: NAME . "(" xpns ")"
   47     | NAME .

    "("  shift, and go to state 51

    $default  reduce using rule 47 (expn)


State 28

   40 expn: STRG .

    $default  reduce using rule 40 (expn)


State 29

   16 stmt: "if" expn . ":" EOLN nest "else" ":" EOLN nest
   17     | "if" expn . ":" EOLN nest
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    ":"    shift, and go to state 57
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 30

   18 stmt: "repeat" ":" . EOLN nest "until" expn EOLN

    EOLN  shift, and go to state 63


State 31

   19 stmt: "while" expn . ":" EOLN nest
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    ":"    shift, and go to state 64
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 32

   25 stmt: "return" EOLN .

    $default  reduce using rule 25 (stmt)


State 33

   24 stmt: "return" expn . EOLN
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    EOLN   shift, and go to state 65
    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 34

    9 defn: "def" NAME . "(" nmes ")" "->" type ":" EOLN nest
   10     | "def" NAME . "(" nmes ")" ":" EOLN nest

    "("  shift, and go to state 66


State 35

   15 stmt: NAME "=" . expn EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 67


State 36

   20 stmt: NAME "+=" . expn EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 68


State 37

   21 stmt: NAME "-=" . expn EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 69


State 38

   14 stmt: NAME ":" . type "=" expn EOLN

    "int"   shift, and go to state 70
    "str"   shift, and go to state 71
    "bool"  shift, and go to state 72
    "None"  shift, and go to state 73

    type  go to state 74


State 39

   26 stmt: NAME "(" . xpns ")" EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    $default  reduce using rule 58 (xpns)

    expn  go to state 44
    xpns  go to state 75


State 40

    0 $accept: main EOFL .

    $default  accept


State 41

    7 defs: defs defn .

    $default  reduce using rule 7 (defs)


State 42

    4 prgm: defs blck .

    $default  reduce using rule 4 (prgm)


State 43

   12 stms: stms stmt .

    $default  reduce using rule 12 (stms)


State 44

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   57 xpns: expn .

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62

    $default  reduce using rule 57 (xpns)


State 45

   23 stmt: "print" "(" xpns . ")" EOLN
   56 xpns: xpns . "," expn

    ","  shift, and go to state 76
    ")"  shift, and go to state 77


State 46

   44 expn: "input" "(" . expn ")"

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 78


State 47

   45 expn: "int" "(" . expn ")"

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 79


State 48

   46 expn: "str" "(" . expn ")"

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 80


State 49

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   33     | "not" expn .
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62

    "and"     [reduce using rule 33 (expn)]
    "or"      [reduce using rule 33 (expn)]
    "<"       [reduce using rule 33 (expn)]
    "<="      [reduce using rule 33 (expn)]
    "=="      [reduce using rule 33 (expn)]
    "+"       [reduce using rule 33 (expn)]
    "-"       [reduce using rule 33 (expn)]
    "*"       [reduce using rule 33 (expn)]
    "//"      [reduce using rule 33 (expn)]
    "%"       [reduce using rule 33 (expn)]
    $default  reduce using rule 33 (expn)


State 50

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   48     | "(" expn . ")"

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62
    ")"    shift, and go to state 81


State 51

   27 expn: NAME "(" . xpns ")"

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    $default  reduce using rule 58 (xpns)

    expn  go to state 44
    xpns  go to state 82


State 52

   28 expn: expn "and" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 83


State 53

   29 expn: expn "or" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 84


State 54

   30 expn: expn "<" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 85


State 55

   31 expn: expn "<=" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 86


State 56

   32 expn: expn "==" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 87


State 57

   16 stmt: "if" expn ":" . EOLN nest "else" ":" EOLN nest
   17     | "if" expn ":" . EOLN nest

    EOLN  shift, and go to state 88


State 58

   34 expn: expn "+" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 89


State 59

   35 expn: expn "-" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 90


State 60

   36 expn: expn "*" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 91


State 61

   37 expn: expn "//" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 92


State 62

   38 expn: expn "%" . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 93


State 63

   18 stmt: "repeat" ":" EOLN . nest "until" expn EOLN

    INDT  shift, and go to state 94

    nest  go to state 95


State 64

   19 stmt: "while" expn ":" . EOLN nest

    EOLN  shift, and go to state 96


State 65

   24 stmt: "return" expn EOLN .

    $default  reduce using rule 24 (stmt)


State 66

    9 defn: "def" NAME "(" . nmes ")" "->" type ":" EOLN nest
   10     | "def" NAME "(" . nmes ")" ":" EOLN nest

    NAME  shift, and go to state 97

    $default  reduce using rule 51 (nmes)

    nmes  go to state 98


State 67

   15 stmt: NAME "=" expn . EOLN
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    EOLN   shift, and go to state 99
    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 68

   20 stmt: NAME "+=" expn . EOLN
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    EOLN   shift, and go to state 100
    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 69

   21 stmt: NAME "-=" expn . EOLN
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    EOLN   shift, and go to state 101
    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 70

   52 type: "int" .

    $default  reduce using rule 52 (type)


State 71

   53 type: "str" .

    $default  reduce using rule 53 (type)


State 72

   54 type: "bool" .

    $default  reduce using rule 54 (type)


State 73

   55 type: "None" .

    $default  reduce using rule 55 (type)


State 74

   14 stmt: NAME ":" type . "=" expn EOLN

    "="  shift, and go to state 102


State 75

   26 stmt: NAME "(" xpns . ")" EOLN
   56 xpns: xpns . "," expn

    ","  shift, and go to state 76
    ")"  shift, and go to state 103


State 76

   56 xpns: xpns "," . expn

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 104


State 77

   23 stmt: "print" "(" xpns ")" . EOLN

    EOLN  shift, and go to state 105


State 78

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   44     | "input" "(" expn . ")"

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62
    ")"    shift, and go to state 106


State 79

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   45     | "int" "(" expn . ")"

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62
    ")"    shift, and go to state 107


State 80

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   46     | "str" "(" expn . ")"

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62
    ")"    shift, and go to state 108


State 81

   48 expn: "(" expn ")" .

    $default  reduce using rule 48 (expn)


State 82

   27 expn: NAME "(" xpns . ")"
   56 xpns: xpns . "," expn

    ","  shift, and go to state 76
    ")"  shift, and go to state 109


State 83

   28 expn: expn . "and" expn
   28     | expn "and" expn .
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "<"   shift, and go to state 54
    "<="  shift, and go to state 55
    "=="  shift, and go to state 56
    "+"   shift, and go to state 58
    "-"   shift, and go to state 59
    "*"   shift, and go to state 60
    "//"  shift, and go to state 61
    "%"   shift, and go to state 62

    $default  reduce using rule 28 (expn)


State 84

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   29     | expn "or" expn .
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "and"  shift, and go to state 52
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62

    $default  reduce using rule 29 (expn)


State 85

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   30     | expn "<" expn .
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "<"   shift, and go to state 54
    "<="  shift, and go to state 55
    "=="  shift, and go to state 56
    "+"   shift, and go to state 58
    "-"   shift, and go to state 59
    "*"   shift, and go to state 60
    "//"  shift, and go to state 61
    "%"   shift, and go to state 62

    "<"       [reduce using rule 30 (expn)]
    "<="      [reduce using rule 30 (expn)]
    "=="      [reduce using rule 30 (expn)]
    $default  reduce using rule 30 (expn)


State 86

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   31     | expn "<=" expn .
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "<"   shift, and go to state 54
    "<="  shift, and go to state 55
    "=="  shift, and go to state 56
    "+"   shift, and go to state 58
    "-"   shift, and go to state 59
    "*"   shift, and go to state 60
    "//"  shift, and go to state 61
    "%"   shift, and go to state 62

    "<"       [reduce using rule 31 (expn)]
    "<="      [reduce using rule 31 (expn)]
    "=="      [reduce using rule 31 (expn)]
    $default  reduce using rule 31 (expn)


State 87

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   32     | expn "==" expn .
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "<"   shift, and go to state 54
    "<="  shift, and go to state 55
    "=="  shift, and go to state 56
    "+"   shift, and go to state 58
    "-"   shift, and go to state 59
    "*"   shift, and go to state 60
    "//"  shift, and go to state 61
    "%"   shift, and go to state 62

    "<"       [reduce using rule 32 (expn)]
    "<="      [reduce using rule 32 (expn)]
    "=="      [reduce using rule 32 (expn)]
    $default  reduce using rule 32 (expn)


State 88

   16 stmt: "if" expn ":" EOLN . nest "else" ":" EOLN nest
   17     | "if" expn ":" EOLN . nest

    INDT  shift, and go to state 94

    nest  go to state 110


State 89

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   34     | expn "+" expn .
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "*"   shift, and go to state 60
    "//"  shift, and go to state 61
    "%"   shift, and go to state 62

    $default  reduce using rule 34 (expn)


State 90

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   35     | expn "-" expn .
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    "*"   shift, and go to state 60
    "//"  shift, and go to state 61
    "%"   shift, and go to state 62

    $default  reduce using rule 35 (expn)


State 91

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   36     | expn "*" expn .
   37     | expn . "//" expn
   38     | expn . "%" expn

    $default  reduce using rule 36 (expn)


State 92

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   37     | expn "//" expn .
   38     | expn . "%" expn

    $default  reduce using rule 37 (expn)


State 93

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   38     | expn "%" expn .

    $default  reduce using rule 38 (expn)


State 94

    2 nest: INDT . blck DEDT
    3     | INDT . blck EOFL

    "pass"    shift, and go to state 1
    "print"   shift, and go to state 2
    "if"      shift, and go to state 3
    "repeat"  shift, and go to state 4
    "while"   shift, and go to state 5
    "return"  shift, and go to state 6
    NAME      shift, and go to state 8

    blck  go to state 111
    stms  go to state 14
    stmt  go to state 15


State 95

   18 stmt: "repeat" ":" EOLN nest . "until" expn EOLN

    "until"  shift, and go to state 112


State 96

   19 stmt: "while" expn ":" EOLN . nest

    INDT  shift, and go to state 94

    nest  go to state 113


State 97

   50 nmes: NAME . ":" type

    ":"  shift, and go to state 114


State 98

    9 defn: "def" NAME "(" nmes . ")" "->" type ":" EOLN nest
   10     | "def" NAME "(" nmes . ")" ":" EOLN nest
   49 nmes: nmes . "," NAME ":" type

    ","  shift, and go to state 115
    ")"  shift, and go to state 116


State 99

   15 stmt: NAME "=" expn EOLN .

    $default  reduce using rule 15 (stmt)


State 100

   20 stmt: NAME "+=" expn EOLN .

    $default  reduce using rule 20 (stmt)


State 101

   21 stmt: NAME "-=" expn EOLN .

    $default  reduce using rule 21 (stmt)


State 102

   14 stmt: NAME ":" type "=" . expn EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 117


State 103

   26 stmt: NAME "(" xpns ")" . EOLN

    EOLN  shift, and go to state 118


State 104

   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn
   56 xpns: xpns "," expn .

    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62

    $default  reduce using rule 56 (xpns)


State 105

   23 stmt: "print" "(" xpns ")" EOLN .

    $default  reduce using rule 23 (stmt)


State 106

   44 expn: "input" "(" expn ")" .

    $default  reduce using rule 44 (expn)


State 107

   45 expn: "int" "(" expn ")" .

    $default  reduce using rule 45 (expn)


State 108

   46 expn: "str" "(" expn ")" .

    $default  reduce using rule 46 (expn)


State 109

   27 expn: NAME "(" xpns ")" .

    $default  reduce using rule 27 (expn)


State 110

   16 stmt: "if" expn ":" EOLN nest . "else" ":" EOLN nest
   17     | "if" expn ":" EOLN nest .

    "else"  shift, and go to state 119

    $default  reduce using rule 17 (stmt)


State 111

    2 nest: INDT blck . DEDT
    3     | INDT blck . EOFL

    EOFL  shift, and go to state 120
    DEDT  shift, and go to state 121


State 112

   18 stmt: "repeat" ":" EOLN nest "until" . expn EOLN

    "input"  shift, and go to state 18
    "int"    shift, and go to state 19
    "str"    shift, and go to state 20
    "not"    shift, and go to state 21
    "("      shift, and go to state 22
    "None"   shift, and go to state 23
    "True"   shift, and go to state 24
    "False"  shift, and go to state 25
    NMBR     shift, and go to state 26
    NAME     shift, and go to state 27
    STRG     shift, and go to state 28

    expn  go to state 122


State 113

   19 stmt: "while" expn ":" EOLN nest .

    $default  reduce using rule 19 (stmt)


State 114

   50 nmes: NAME ":" . type

    "int"   shift, and go to state 70
    "str"   shift, and go to state 71
    "bool"  shift, and go to state 72
    "None"  shift, and go to state 73

    type  go to state 123


State 115

   49 nmes: nmes "," . NAME ":" type

    NAME  shift, and go to state 124


State 116

    9 defn: "def" NAME "(" nmes ")" . "->" type ":" EOLN nest
   10     | "def" NAME "(" nmes ")" . ":" EOLN nest

    "->"  shift, and go to state 125
    ":"   shift, and go to state 126


State 117

   14 stmt: NAME ":" type "=" expn . EOLN
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    EOLN   shift, and go to state 127
    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 118

   26 stmt: NAME "(" xpns ")" EOLN .

    $default  reduce using rule 26 (stmt)


State 119

   16 stmt: "if" expn ":" EOLN nest "else" . ":" EOLN nest

    ":"  shift, and go to state 128


State 120

    3 nest: INDT blck EOFL .

    $default  reduce using rule 3 (nest)


State 121

    2 nest: INDT blck DEDT .

    $default  reduce using rule 2 (nest)


State 122

   18 stmt: "repeat" ":" EOLN nest "until" expn . EOLN
   28 expn: expn . "and" expn
   29     | expn . "or" expn
   30     | expn . "<" expn
   31     | expn . "<=" expn
   32     | expn . "==" expn
   34     | expn . "+" expn
   35     | expn . "-" expn
   36     | expn . "*" expn
   37     | expn . "//" expn
   38     | expn . "%" expn

    EOLN   shift, and go to state 129
    "and"  shift, and go to state 52
    "or"   shift, and go to state 53
    "<"    shift, and go to state 54
    "<="   shift, and go to state 55
    "=="   shift, and go to state 56
    "+"    shift, and go to state 58
    "-"    shift, and go to state 59
    "*"    shift, and go to state 60
    "//"   shift, and go to state 61
    "%"    shift, and go to state 62


State 123

   50 nmes: NAME ":" type .

    $default  reduce using rule 50 (nmes)


State 124

   49 nmes: nmes "," NAME . ":" type

    ":"  shift, and go to state 130


State 125

    9 defn: "def" NAME "(" nmes ")" "->" . type ":" EOLN nest

    "int"   shift, and go to state 70
    "str"   shift, and go to state 71
    "bool"  shift, and go to state 72
    "None"  shift, and go to state 73

    type  go to state 131


State 126

   10 defn: "def" NAME "(" nmes ")" ":" . EOLN nest

    EOLN  shift, and go to state 132


State 127

   14 stmt: NAME ":" type "=" expn EOLN .

    $default  reduce using rule 14 (stmt)


State 128

   16 stmt: "if" expn ":" EOLN nest "else" ":" . EOLN nest

    EOLN  shift, and go to state 133


State 129

   18 stmt: "repeat" ":" EOLN nest "until" expn EOLN .

    $default  reduce using rule 18 (stmt)


State 130

   49 nmes: nmes "," NAME ":" . type

    "int"   shift, and go to state 70
    "str"   shift, and go to state 71
    "bool"  shift, and go to state 72
    "None"  shift, and go to state 73

    type  go to state 134


State 131

    9 defn: "def" NAME "(" nmes ")" "->" type . ":" EOLN nest

    ":"  shift, and go to state 135


State 132

   10 defn: "def" NAME "(" nmes ")" ":" EOLN . nest

    INDT  shift, and go to state 94

    nest  go to state 136


State 133

   16 stmt: "if" expn ":" EOLN nest "else" ":" EOLN . nest

    INDT  shift, and go to state 94

    nest  go to state 137


State 134

   49 nmes: nmes "," NAME ":" type .

    $default  reduce using rule 49 (nmes)


State 135

    9 defn: "def" NAME "(" nmes ")" "->" type ":" . EOLN nest

    EOLN  shift, and go to state 138


State 136

   10 defn: "def" NAME "(" nmes ")" ":" EOLN nest .

    $default  reduce using rule 10 (defn)


State 137

   16 stmt: "if" expn ":" EOLN nest "else" ":" EOLN nest .

    $default  reduce using rule 16 (stmt)


State 138

    9 defn: "def" NAME "(" nmes ")" "->" type ":" EOLN . nest

    INDT  shift, and go to state 94

    nest  go to state 139


State 139

    9 defn: "def" NAME "(" nmes ")" "->" type ":" EOLN nest .

    $default  reduce using rule 9 (defn)
